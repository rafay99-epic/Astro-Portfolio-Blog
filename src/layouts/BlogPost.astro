---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/AstroComponent/base/BaseHead.astro";
import Header from "../components/AstroComponent/header/Header.astro";
import Footer from "../components/AstroComponent/footer/Footer.astro";
import ContentContainer from "../components/AstroComponent/blog/layout/ContentContainer.astro";
import SpeedInsights from "@vercel/speed-insights/astro";
import PostComment from "../components/AstroComponent/blog/comments/PostComment.astro";
import { featureFlags } from "../config/featureFlag/featureFlag.json";
import { getCollection } from "astro:content";
import AISummaryCard from "../components/ReactComponent/blog/enhancements/summary-card/summary_blog";
import BlogHeader from "../components/ReactComponent/blog/layout/BlogPostLayout/BlogPostLayoutHeader";
import { QAChatWidget } from "../components/ReactComponent/blog/enhancements/qa-chat/QAChatWidget";
import CodeCopySimple from "../components/ReactComponent/blog/enhancements/code-copy/CodeCopySimple";
import MermaidRenderer from "../components/ReactComponent/blog/enhancements/diagram-renderer/MermaidRenderer";
export const prerender = true;
import { SEO } from "astro-seo";
import { getImagePath } from "astro-opengraph-images";

const { url, site } = Astro;
const openGraphImageUrl = getImagePath({ url, site });

const pageUrl = Astro.url.href;
type Props = CollectionEntry<"blog">["data"];

try {
  if (!featureFlags.showBlog) {
    return Astro.redirect("/access-denied");
  }
} catch (error) {
  return Astro.redirect("/404");
}

const BlogPosts = featureFlags.showBlog
  ? (await getCollection("blog")).sort(
      (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf()
    )
  : [];

const currentSlug = Astro.url.pathname.split("/").filter(Boolean).pop();
const currentBlog = BlogPosts.find((post) => post.slug === currentSlug);

if (!currentBlog) {
  return Astro.redirect("/access-denied");
}

const blogContent = currentBlog.body;

const {
  title,
  description,
  pubDate,
  heroImage,
  authorName,
  authorAvatar,
  tags,
  readTime,
} = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <SpeedInsights />
    <style>
      .blog-container {
        min-height: 100vh;
        position: relative;
      }

      #scroll-progress {
        position: fixed;
        top: 0;
        left: 0;
        height: 4px;
        background: linear-gradient(
          90deg,
          #7aa2f7 0%,
          #bb9af7 50%,
          #9ece6a 100%
        );
        transform: scaleX(0);
        transform-origin: left;
        transition: transform 0.1s linear;
        width: 100%;
        z-index: 50;
        pointer-events: none;
        box-shadow: 0 2px 12px rgba(122, 162, 247, 0.4);
      }

      #scroll-progress::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
          90deg,
          rgba(122, 162, 247, 0.8) 0%,
          rgba(187, 154, 247, 0.8) 50%,
          rgba(158, 206, 106, 0.8) 100%
        );
        filter: blur(2px);
        z-index: -1;
      }

      .main-content {
        opacity: 1;
      }

      .comments-section {
        opacity: 1;
      }

      .comments-container {
        background: rgba(26, 27, 38, 0.6);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(86, 95, 137, 0.2);
        border-radius: 20px;
        padding: 32px;
        margin-top: 32px;
        position: relative;
        overflow: hidden;
      }

      .comments-container::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
          135deg,
          rgba(122, 162, 247, 0.03) 0%,
          rgba(187, 154, 247, 0.03) 100%
        );
        pointer-events: none;
      }

      .comments-header {
        text-align: center;
        margin-bottom: 2rem;
        position: relative;
        z-index: 1;
      }

      .comments-title {
        font-size: 2.5rem;
        font-weight: bold;
        background: linear-gradient(135deg, #7aa2f7, #bb9af7);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin-bottom: 0.5rem;
      }

      .blog-typography {
        line-height: 1.8;
        font-size: 1.1rem;
      }

      .blog-typography h1,
      .blog-typography h2,
      .blog-typography h3,
      .blog-typography h4,
      .blog-typography h5,
      .blog-typography h6 {
        margin-top: 2.5rem;
        margin-bottom: 1rem;
        scroll-margin-top: 100px;
      }

      .blog-typography h2 {
        border-left: 4px solid #7aa2f7;
        padding-left: 1rem;
        background: rgba(122, 162, 247, 0.05);
        padding: 0.5rem 1rem;
        border-radius: 8px;
      }

      .blog-typography h3 {
        color: #bb9af7;
        position: relative;
      }

      .blog-typography h3::before {
        content: "üìù";
        margin-right: 0.5rem;
      }

      .blog-typography blockquote {
        background: rgba(122, 162, 247, 0.1);
        border-left: 4px solid #7aa2f7;
        padding: 1rem 1.5rem;
        margin: 1.5rem 0;
        border-radius: 0 8px 8px 0;
      }

      .blog-typography ul li::marker {
        color: #7aa2f7;
      }

      .blog-typography ol li::marker {
        color: #bb9af7;
        font-weight: bold;
      }

      @media (max-width: 600px) {
        .main-content {
          padding: 0.5rem !important;
        }

        .blog-typography {
          font-size: 1rem;
          line-height: 1.7;
        }

        .comments-container {
          padding: 24px;
        }

        .comments-title {
          font-size: 2rem;
        }

        #scroll-progress {
          height: 3px;
        }
      }
    </style>

    <SEO
      title={title}
      description={description}
      openGraph={{
        basic: {
          title: title,
          type: "article",
          image: openGraphImageUrl,
          url: pageUrl,
        },
        optional: {
          description: description,
          locale: "en_US",
        },
      }}
    />
  </head>
  <body class="blog-container" style="overflow-x: hidden; overflow-y: auto;">
    <Header />
    <div id="scroll-progress"></div>

    <main
      class="max-w-5xl mx-auto w-full px-6 py-8 md:py-12 overflow-x-hidden main-content"
    >
      <section class="mb-12">
        <BlogHeader
          client:visible
          title={title ?? "Untitled"}
          date={new Date(pubDate).toLocaleDateString("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          })}
          authorName={authorName ?? "Anonymous"}
          authorAvatar={authorAvatar ?? "/default-avatar.png"}
          coverImage={heroImage ?? "/default-cover.jpg"}
          tags={tags}
          readtime={readTime}
        />
        <div class="mt-8">
          <AISummaryCard
            client:load
            title={title}
            description={description}
            author={authorName}
            content={blogContent}
          />
        </div>
      </section>

      <!-- Main Content -->
      <div class="w-full">
        <ContentContainer withBackground={false} class="blog-typography">
          <slot />
        </ContentContainer>
      </div>

      <!-- Mermaid Diagram Renderer -->
      <MermaidRenderer client:load />

      <!-- Code Copy Enhancement -->
      <CodeCopySimple client:load />

      <div class="comments-section">
        <div class="comments-container">
          <div class="comments-header">
            <h2 class="comments-title">üí¨ Join the Discussion</h2>
            <p class="text-[#a9b1d6] text-sm">
              Share your thoughts and engage with the community
            </p>
          </div>
          <div class="relative z-1">
            <PostComment />
          </div>
        </div>
      </div>
    </main>

    {
      featureFlags.showQASection && (
        <QAChatWidget
          client:visible
          title={title}
          description={description}
          author={authorName}
          content={blogContent}
        />
      )
    }

    <script is:inline>
      // Prevent auto-scroll restoration and conflicts
      if ("scrollRestoration" in history) {
        history.scrollRestoration = "manual";
      }

      // Prevent initial scroll jumping
      document.addEventListener("DOMContentLoaded", function () {
        setTimeout(() => {
          window.scrollTo(0, 0);
        }, 0);
      });
    </script>
    <script type="text/partytown" is:inline src="/js/progressbar.js"></script>
    <Footer />
  </body>
</html>
