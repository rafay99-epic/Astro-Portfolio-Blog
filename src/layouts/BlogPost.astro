---
import type { CollectionEntry } from "astro:content";
import BaseHead from "@astro/base/BaseHead.astro";
import Header from "@astro/header/Header.astro";
import Footer from "@astro/footer/Footer.astro";
import PostComment from "@astro/blog/comments/PostComment.astro";
import { featureFlags } from "@config/featureFlag/featureFlag.json";
import { getCollection } from "astro:content";
import CodeCopySimple from "@react/blog/enhancements/code-copy/CodeCopySimple";
import MermaidRenderer from "@react/blog/enhancements/diagram-renderer/MermaidRenderer";
import ImageCaptionRenderer from "@react/blog/enhancements/image-caption-renderer/ImageCaptionRenderer";
import BlogNavigation from "@react/blog/layout/BlogNavigation";
export const prerender = true;
import { SEO } from "astro-seo";
import { getImagePath } from "astro-opengraph-images";

const { url, site } = Astro;
const openGraphImageUrl = getImagePath({ url, site });

const pageUrl = Astro.url.href;
type Props = CollectionEntry<"blog">["data"];

try {
  if (!featureFlags.showBlog) {
    return Astro.redirect("/access-denied");
  }
} catch (error) {
  return Astro.redirect("/404");
}

const BlogPosts = featureFlags.showBlog
  ? (await getCollection("blog"))
      .filter((post) => !post.data.draft)
      .sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf())
  : [];

const currentSlug = Astro.url.pathname.split("/").filter(Boolean).pop();
const currentBlog = BlogPosts.find((post) => post.slug === currentSlug);

if (!currentBlog) {
  return Astro.redirect("/access-denied");
}

const blogContent = currentBlog.body;

const {
  title,
  description,
  pubDate,
  heroImage,
  authorName,
  authorAvatar,
  tags,
  readTime,
  keywords,
  canonicalUrl,
  featured,
  excerpt,
} = Astro.props;
---

<html lang="en">
  <head>
    <BaseHead
      title={title}
      description={description}
      image={heroImage}
      keywords={keywords}
    />

    <style>
      #scroll-progress {
        position: fixed;
        top: 0;
        left: 0;
        height: 4px;
        background: linear-gradient(
          90deg,
          #7aa2f7 0%,
          #bb9af7 50%,
          #9ece6a 100%
        );
        transform: scaleX(0);
        transform-origin: left;
        transition: transform 0.1s linear;
        width: 100%;
        z-index: 50;
        pointer-events: none;
        box-shadow: 0 2px 12px rgba(122, 162, 247, 0.4);
      }

      #scroll-progress::after {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(
          90deg,
          rgba(122, 162, 247, 0.8) 0%,
          rgba(187, 154, 247, 0.8) 50%,
          rgba(158, 206, 106, 0.8) 100%
        );
        filter: blur(2px);
        z-index: -1;
      }

      /* Prevent white flash - Critical styles */
      html {
        background-color: #1a1b26 !important;
      }

      body {
        background-color: #1a1b26 !important;
        transition: none !important;
      }

      .blog-container {
        background-color: #1a1b26 !important;
      }
    </style>

    <style is:inline>
      html {
        background-color: #1a1b26 !important;
      }
      body {
        background-color: #1a1b26 !important;
      }
      #__astro {
        background-color: #1a1b26 !important;
      }
    </style>

    <SEO
      title={title}
      description={description}
      openGraph={{
        basic: {
          title: title,
          type: "article",
          image: heroImage
            ? new URL(heroImage, Astro.url).toString()
            : openGraphImageUrl,
          url: pageUrl,
        },
        optional: {
          description: description,
          locale: "en_US",
          siteName: "Rafay99",
        },
      }}
      twitter={{
        card: "summary_large_image",
        site: "@rafay99",
        creator: "@rafay99",
      }}
    />

    <script
      is:inline
      type="text/partytown"
      async
      src="https://www.googletagmanager.com/gtag/js?id=G-DKPL4VGM52"></script>
    <script is:inline type="text/partytown">
      window.dataLayer = window.dataLayer || [];
      function gtag() {
        dataLayer.push(arguments);
      }
      gtag("js", new Date());

      gtag("config", "G-DKPL4VGM52");
    </script>

    <script
      is:inline
      type="application/ld+json"
      set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        headline: title,
        description: description,
        image: heroImage
          ? new URL(heroImage, Astro.url).toString()
          : new URL("/Rafay99.webp", Astro.url).toString(),
        author: {
          "@type": "Person",
          name: authorName,
          image: authorAvatar
            ? new URL(authorAvatar, Astro.url).toString()
            : new URL("/author.jpg", Astro.url).toString(),
          url: "https://rafay99.com",
        },
        publisher: {
          "@type": "Organization",
          name: "Rafay99",
          logo: {
            "@type": "ImageObject",
            url: new URL("/favicon.webp", Astro.url).toString(),
          },
        },
        datePublished: pubDate.toISOString(),
        dateModified:
          currentBlog.data.updatedDate?.toISOString() || pubDate.toISOString(),
        mainEntityOfPage: {
          "@type": "WebPage",
          "@id": pageUrl,
        },
        keywords:
          keywords?.join(", ") ||
          tags?.join(", ") ||
          "blog, technology, programming",
        articleSection: tags?.[0] || "Technology",
        wordCount: blogContent.length,
        timeRequired: readTime || "5 min read",
      })}
    />

    <script
      is:inline
      type="application/ld+json"
      set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        itemListElement: [
          {
            "@type": "ListItem",
            position: 1,
            name: "Home",
            item: "https://rafay99.com",
          },
          {
            "@type": "ListItem",
            position: 2,
            name: "Blog",
            item: "https://rafay99.com/blog",
          },
          {
            "@type": "ListItem",
            position: 3,
            name: title,
            item: pageUrl,
          },
        ],
      })}
    />

    {
      (() => {
        const faqMatches = blogContent.match(/^#{2,6}\s+(.+)$/gm);
        if (!faqMatches || faqMatches.length < 3) return null;

        const faqItems = faqMatches.slice(0, 5).map((heading, _index) => {
          const text = heading.replace(/^#{2,6}\s+/, "");
          return {
            "@type": "Question",
            name: text,
            acceptedAnswer: {
              "@type": "Answer",
              text: `This section covers ${text.toLowerCase()}. Read the full article for detailed information.`,
            },
          };
        });

        return (
          <script
            is:inline
            type="application/ld+json"
            set:html={JSON.stringify({
              "@context": "https://schema.org",
              "@type": "FAQPage",
              mainEntity: faqItems,
            })}
          />
        );
      })()
    }

    <meta name="author" content={authorName} />
    <meta
      name="robots"
      content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1"
    />
    <meta name="googlebot" content="index, follow" />
    <meta name="bingbot" content="index, follow" />
    <meta name="copyright" content="Â© 2025 Abdul Rafay" />
    <meta
      name="keywords"
      content={keywords?.join(", ") ||
        tags?.join(", ") ||
        "blog, technology, programming"}
    />
    <meta name="article:published_time" content={pubDate.toISOString()} />
    {
      currentBlog.data.updatedDate && (
        <meta
          name="article:modified_time"
          content={currentBlog.data.updatedDate.toISOString()}
        />
      )
    }
    <meta name="article:author" content={authorName} />
    {tags?.map((tag) => <meta name="article:tag" content={tag} />)}
    <meta name="article:section" content={tags?.[0] || "Technology"} />
    {featured && <meta name="article:featured" content="true" />}
    {excerpt && <meta name="description" content={excerpt} />}

    {heroImage && <link rel="preload" as="image" href={heroImage} />}

    <meta name="revisit-after" content="7 days" />
    <meta name="rating" content="general" />
    <meta name="distribution" content="global" />
    <meta name="coverage" content="worldwide" />
    <meta name="target" content="all" />
    <meta name="HandheldFriendly" content="true" />
    <meta name="format-detection" content="telephone=no" />

    <meta property="og:locale" content="en_US" />
    <meta property="og:type" content="article" />
    <meta property="og:site_name" content="Rafay99" />
    <meta property="og:published_time" content={pubDate.toISOString()} />
    {
      currentBlog.data.updatedDate && (
        <meta
          property="og:modified_time"
          content={currentBlog.data.updatedDate.toISOString()}
        />
      )
    }
    {tags?.map((tag) => <meta property="og:tag" content={tag} />)}

    <meta name="twitter:label1" content="Reading time" />
    <meta name="twitter:data1" content={readTime || "5 min read"} />
    <meta name="twitter:label2" content="Category" />
    <meta name="twitter:data2" content={tags?.[0] || "Technology"} />

    {
      canonicalUrl ? (
        <link rel="canonical" href={canonicalUrl} />
      ) : (
        <link rel="canonical" href={pageUrl} />
      )
    }

    <meta name="language" content="English" />
    <meta name="geo.region" content="US" />
    <meta name="geo.placename" content="United States" />

    <meta
      http-equiv="Content-Security-Policy"
      content="upgrade-insecure-requests"
    />
  </head>
  <body class="blog-container" style="overflow-x: hidden; overflow-y: auto;">
    <Header />
    <div id="scroll-progress"></div>

    <main
      class="main-content pt-15 mx-auto w-full max-w-4xl overflow-x-hidden px-6 py-8 md:py-12"
    >
      <header class="mb-12 text-center">
        <div
          class="mb-4 flex items-center justify-center gap-4 text-sm text-[#565f89]"
        >
          <time datetime={pubDate.toISOString()}>
            {
              new Date(pubDate).toLocaleDateString("en-US", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })
            }
          </time>
          <span>â¢</span>
          <span>Written by {authorName}</span>
          <span>â¢</span>
          <span>{readTime}</span>
        </div>

        <h1
          class="mb-8 bg-gradient-to-r from-[#7aa2f7] via-[#bb9af7] to-[#9ece6a] bg-clip-text text-4xl leading-tight text-transparent md:text-5xl"
        >
          {title}
        </h1>
      </header>

      <div class="w-full">
        <slot />
      </div>

      <MermaidRenderer client:load />

      <ImageCaptionRenderer client:load />

      <CodeCopySimple client:load />

      <BlogNavigation
        client:load
        currentSlug={currentSlug || ""}
        allPosts={BlogPosts}
      />

      <div class="comments-section">
        <div class="comments-container">
          <div class="comments-header">
            <h2 class="comments-title">ð¬ Join the Discussion</h2>
            <p class="text-sm text-[#a9b1d6]">
              Share your thoughts and engage with the community
            </p>
          </div>
          <div class="z-1 relative">
            <PostComment />
          </div>
        </div>
      </div>
    </main>

    <script is:inline>
      if ("scrollRestoration" in history) {
        history.scrollRestoration = "manual";
      }

      document.addEventListener("DOMContentLoaded", function () {
        setTimeout(() => {
          window.scrollTo(0, 0);
        }, 0);
      });
    </script>
    <script is:inline type="text/partytown" src="/js/progressbar.js"></script>
    <Footer />
  </body>
</html>
