---
import BaseHead from "@astro/base/BaseHead.astro";
import Header from "@astro/header/Header.astro";
import Footer from "@astro/footer/Footer.astro";
import authorConfig from "@config/siteConfig/info.json";
import { getCollection } from "astro:content";
import { featureFlags } from "@config/featureFlag/featureFlag.json";

const projects = await getCollection("projects");
export const prerender = true;

try {
  if (!featureFlags.showProjects) {
    return Astro.redirect("/access-denied");
  }
} catch (error) {
  return Astro.redirect("/404");
}

const filteredProjects = projects
  .filter((project) => !project.data.draft)
  .sort((a, b) => {
    const rankingA = parseInt(a.data.ProjectRanking || "9999", 10);
    const rankingB = parseInt(b.data.ProjectRanking || "9999", 10);
    return rankingA - rankingB;
  });
---

<html lang="en">
  <head>
    <BaseHead
      title={`Projects | ${authorConfig.SiteName}`}
      description={`Browse all projects on ${authorConfig.SiteName} and explore categorized content.`}
    />
  </head>

  <body
    class="bg-[#1a1b26] text-[#c0caf5]"
    style="overflow-x: hidden; overflow-y: auto;"
  >
    <Header />
   <main class="min-h-screen py-16 px-4 md:px-8">
  <div class="container mx-auto max-w-7xl">
    <div class="text-center mb-12">
          <h1
            class="font-extrabold mb-4 bg-gradient-to-r from-[#7aa2f7] via-[#bb9af7] to-[#9ece6a] bg-clip-text text-transparent text-4xl md:text-6xl lg:text-7xl"
          >
            My Creations
          </h1>
          <p class="text-[#a9b1d6] max-w-3xl mx-auto text-lg md:text-xl">
            A curated collection of innovative projects, showcasing my passion
            for problem-solving and software craftsmanship.
          </p>
          <div
            class="mx-auto mt-6 h-1 bg-gradient-to-r from-transparent via-[#7aa2f7] to-transparent rounded-full w-48 md:w-64"
          >
          </div>
        </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      {filteredProjects.map((project) => (
        <div class="group relative">
          <div class="relative overflow-hidden rounded-xl bg-[#24283b]/70 border border-[#3b4261]/50 transition-all duration-300 hover:border-[#7aa2f7]">
            <!-- Project Image with Overlay -->
            <div class="relative h-64 overflow-hidden">
              <img
                src={project.data.ProjectImage}
                alt={project.data.Projecttitle}
                class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105"
              />
              <div class="absolute inset-0 bg-gradient-to-b from-transparent to-[#1a1b26]/90"></div>
            </div>

            <!-- Project Info -->
            <div class="p-6">
              <div class="flex items-center justify-between mb-4">
                <h3 class="text-2xl font-bold text-[#c0caf5]">{project.data.Projecttitle}</h3>
                <span class="text-sm px-3 py-1 rounded-full bg-[#7aa2f7]/20 text-[#7aa2f7]">
                  Rank #{project.data.ProjectRanking}
                </span>
              </div>

              <p class="text-[#a9b1d6] mb-6 line-clamp-2">
                {project.data.ProjectDescription}
              </p>

              <!-- Tech Stack -->
              {project.data.ProjectTech && project.data.ProjectTech.length > 0 && (
                <div class="flex flex-wrap gap-2 mb-6">
                  {project.data.ProjectTech.slice(0, 5).map((tech: string) => (
                    <span class="px-3 py-1 text-xs rounded-full bg-[#24283b] border border-[#3b4261]/50">
                      {tech}
                    </span>
                  ))}
                </div>
              )}

              <!-- Action Buttons -->
              <div class="flex items-center justify-between pt-4 border-t border-[#3b4261]/30">
                <div class="flex gap-4">
                  {project.data.ProjectGithubLink && (
                    <a
                      href={project.data.ProjectGithubLink}
                      class="flex items-center gap-2 text-[#c0caf5] hover:text-[#bb9af7] transition-colors"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      <i class="fas fa-code text-lg"></i>
                      <span>Source</span>
                    </a>
                  )}
                  {project.data.ProjectDeployedLink && (
                    <a
                      href={project.data.ProjectDeployedLink}
                      class="flex items-center gap-2 text-[#c0caf5] hover:text-[#bb9af7] transition-colors"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      <i class="fas fa-external-link-alt text-lg"></i>
                      <span>Live Demo</span>
                    </a>
                  )}
                </div>
                
                <a
                  href={`/project/${project.slug}`}
                  class="flex items-center gap-2 text-[#7aa2f7] hover:text-[#bb9af7] transition-colors"
                >
                  <span>View Details</span>
                  <i class="fas fa-arrow-right transition-transform group-hover:translate-x-1"></i>
                </a>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</main>
    <script is:inline>
      document
        .querySelectorAll('.project-card a[target="_blank"]')
        .forEach((link) => {
          link.addEventListener("click", (e) => {
            e.stopPropagation();
          });
        });

      if ("scrollRestoration" in history) {
        history.scrollRestoration = "manual";
      }

      document.addEventListener("DOMContentLoaded", function () {
        setTimeout(() => {
          window.scrollTo(0, 0);
        }, 0);
      });
    </script>

    <Footer />
  </body>
</html>
