---
import { getCollection } from "astro:content";

import BaseHead from "@astro/base/BaseHead.astro";
import Header from "@astro/header/Header.astro";
import Footer from "@astro/footer/Footer.astro";
import authorConfig from "@config/siteConfig/info.json";
import TagFilterDisplay from "@astro/blog/comments/TagFilterDisplay.astro";
import { featureFlags } from "../../config/featureFlag/featureFlag.json";
import { ClientRouter } from "astro:transitions";

export const prerender = true;

const allPosts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const publishedPosts = allPosts.filter((post) => !post.data.draft);

const allTags = Array.from(
  new Set(publishedPosts.flatMap((post) => post.data.tags || [])),
).sort((a, b) => (a as string).localeCompare(b as string)) as string[];

const selectedTag = null;
const currentPage = 1;

const filteredPosts = publishedPosts;

const postsPerPage = 10;
const totalPages = Math.ceil(filteredPosts.length / postsPerPage);

const paginatedPosts = filteredPosts.slice(
  (currentPage - 1) * postsPerPage,
  currentPage * postsPerPage,
);

try {
  if (!featureFlags.showTags) {
    return Astro.redirect("/access-denied");
  }
} catch (error) {
  return Astro.redirect("/404");
}
---

<html lang="en">
  <head>
    <BaseHead
      title={`Tags | ${authorConfig.SiteName}`}
      description={`Browse all tags on ${authorConfig.SiteName} and explore categorized content.`}
    />
  </head>

  <body>
    <Header />
    <ClientRouter />
    <main class="mx-auto w-full max-w-5xl">
      <div>
        <TagFilterDisplay
          allTags={allTags}
          paginatedPosts={paginatedPosts}
          selectedTag={selectedTag}
          currentPage={currentPage}
          totalPages={totalPages}
          currentUrl={new URL(Astro.url)}
        />
      </div>
    </main>
    <Footer class="mt-auto" />
  </body>
</html>
