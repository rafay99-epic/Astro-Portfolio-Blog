---
import BaseHead from "@astro/base/BaseHead.astro";
import Header from "@astro/header/Header.astro";
import Footer from "@astro/footer/Footer.astro";
import authorConfig from "@config/siteConfig/info.json";
import TagFilterDisplay from "@astro/blog/comments/TagFilterDisplay.astro";
import { featureFlags } from "@config/featureFlag/featureFlag.json";
import { ClientRouter } from "astro:transitions";
import { getCollection } from "astro:content";

export const prerender = true;

export async function getStaticPaths() {
  if (!featureFlags.showTags) {
    return [];
  }

  const allPosts = (await getCollection("blog"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

  const allTags = Array.from(
    new Set(allPosts.flatMap((post) => post.data.tags || [])),
  ).sort((a, b) => (a as string).localeCompare(b as string)) as string[];

  const paths: any[] = [];
  const postsPerPage = 10;
  const totalPages = Math.ceil(allPosts.length / postsPerPage);

  for (let page = 2; page <= totalPages; page++) {
    paths.push({
      params: { page: page.toString() },
      props: {
        tag: null,
        page,
        totalPages,
        postsPerPage,
        allPosts,
        allTags,
      },
    });
  }

  return paths;
}

const { tag, page, totalPages, postsPerPage, allPosts, allTags } = Astro.props;
const currentPage = page;

const startIndex = (currentPage - 1) * postsPerPage;
const endIndex = startIndex + postsPerPage;
const paginatedPosts = allPosts.slice(startIndex, endIndex);

try {
  if (!featureFlags.showTags) {
    return Astro.redirect("/access-denied");
  }
} catch (error) {
  return Astro.redirect("/404");
}
---

<html lang="en">
  <head>
    <BaseHead
      title={`All Articles - Page ${currentPage} | ${authorConfig.SiteName}`}
      description={`Browse all articles on page ${currentPage} of ${authorConfig.SiteName}.`}
    />
  </head>

  <body>
    <Header />
    <ClientRouter />
    <main class="mx-auto w-full max-w-5xl">
      <div>
        <TagFilterDisplay
          allTags={allTags}
          paginatedPosts={paginatedPosts}
          selectedTag={tag}
          currentPage={currentPage}
          totalPages={totalPages}
          currentUrl={new URL(Astro.url)}
        />
      </div>
    </main>
    <Footer class="mt-auto" />
  </body>
</html>
