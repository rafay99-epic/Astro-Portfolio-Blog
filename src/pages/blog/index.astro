---
import BaseHead from "@astro/base/BaseHead.astro";
import Header from "@astro/header/Header.astro";
import Footer from "@astro/footer/Footer.astro";
import authorConfig from "@config/siteConfig/info.json";
import { getCollection } from "astro:content";
import { featureFlags } from "@config/featureFlag/featureFlag.json";

export const prerender = false;

const postsPerPage = 9;

const allPosts = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const totalPosts = allPosts.length;
const totalPages = Math.ceil(totalPosts / postsPerPage);

const currentPage = 1;

const posts = allPosts.slice(0, postsPerPage);

try {
  if (!featureFlags.showBlog) {
    return Astro.redirect("/access-denied");
  }
} catch (error) {
  return Astro.redirect("/404");
}
---

<html lang="en">
  <head>
    <BaseHead
      title={`Articles | ${authorConfig.SiteName}`}
      description={`Browse all articles on ${authorConfig.SiteName} and explore categorized content.`}
    />

    <style is:inline>
      html {
        background-color: #1a1b26 !important;
      }
      body {
        background-color: #1a1b26 !important;
      }
      #__astro {
        background-color: #1a1b26 !important;
      }
    </style>

    <style>
      /* Prevent white flash */
      html {
        background-color: #1a1b26 !important;
      }

      body {
        background-color: #1a1b26 !important;
        transition: none !important;
      }
    </style>

    <script
      is:inline
      type="application/ld+json"
      set:html={JSON.stringify({
        "@context": "https://schema.org",
        "@type": "Blog",
        name: `${authorConfig.SiteName} Blog`,
        description: `Browse all articles on ${authorConfig.SiteName} and explore categorized content.`,
        url: "https://rafay99.com/blog",
        publisher: {
          "@type": "Organization",
          name: authorConfig.SiteName,
          logo: {
            "@type": "ImageObject",
            url: "https://rafay99.com/favicon.webp",
          },
        },
        blogPost: posts.map((post, _index) => ({
          "@type": "BlogPosting",
          headline: post.data.title,
          description: post.data.description,
          author: {
            "@type": "Person",
            name: post.data.authorName,
          },
          datePublished: post.data.pubDate.toISOString(),
          url: `https://rafay99.com/blog/${post.slug}`,
          keywords: post.data.tags?.join(", ") || "blog, technology",
        })),
      })}
    />
  </head>
  <body class="flex min-h-screen flex-col bg-[#1a1b26] text-[#a9b1d6]">
    <Header />

    <main class="mx-auto max-w-7xl flex-1 px-8 py-16">
      <div class="mb-12 text-center">
        <h1
          class="mb-3 bg-gradient-to-r from-[#7aa2f7] to-[#bb9af7] bg-clip-text text-4xl text-transparent lg:text-5xl"
        >
          Articles
        </h1>
        <p class="mx-auto max-w-xl text-lg text-[#a9b1d6]">
          Explore insights, tutorials, and thoughts on development
        </p>
        <div
          class="mx-auto mt-4 h-0.5 w-20 rounded-full bg-gradient-to-r from-[#7aa2f7] to-[#bb9af7]"
        >
        </div>
      </div>

      <div class="grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-3">
        {
          posts.map((post, _index) => (
            <article>
              <a href={`/blog/${post.slug}`} class="block">
                <div class="mb-6 h-64 overflow-hidden rounded-xl">
                  <img
                    src={post.data.heroImage || "/default-image.jpg"}
                    alt={post.data.title}
                    class="h-full w-full object-cover"
                  />
                </div>

                <div class="text-center">
                  <time
                    datetime={post.data.pubDate.toISOString()}
                    class="mb-4 block text-xs text-[#565f89]"
                  >
                    {new Date(post.data.pubDate).toLocaleDateString("en-US", {
                      month: "short",
                      day: "numeric",
                      year: "numeric",
                    })}
                  </time>

                  <h2 class="mb-6 line-clamp-2 text-xl leading-tight text-white transition-colors duration-200 hover:text-[#7aa2f7]">
                    {post.data.title}
                  </h2>

                  <div class="flex items-center justify-center text-sm font-medium text-[#7aa2f7] transition-colors duration-200 hover:text-[#bb9af7]">
                    <span>Read article</span>
                    <svg
                      class="ml-2 h-4 w-4 transition-transform duration-200 group-hover:translate-x-1"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 5l7 7-7 7"
                      />
                    </svg>
                  </div>
                </div>
              </a>
            </article>
          ))
        }
      </div>

      {
        totalPages > 1 && (
          <div class="mt-8 flex items-center justify-center border-t border-[#565f89]/20 pt-6">
            <div class="flex items-center gap-6">
              <a
                href={currentPage > 1 ? `/blog/page/${currentPage - 1}` : "#"}
                class={`flex items-center gap-2 text-sm font-medium transition-colors duration-200 ${
                  currentPage > 1
                    ? "text-[#7aa2f7] hover:text-[#bb9af7]"
                    : "cursor-not-allowed text-[#565f89]"
                }`}
              >
                <svg
                  class="h-4 w-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 19l-7-7 7-7"
                  />
                </svg>
                <span>Previous</span>
              </a>

              <div class="flex items-center gap-2">
                <div class="h-2 w-2 rounded-full bg-[#7aa2f7]" />
                <span class="text-xs text-[#565f89]">
                  Page {currentPage} of {totalPages}
                </span>
                <div class="h-2 w-2 rounded-full bg-[#565f89]/30" />
              </div>

              <a
                href={
                  currentPage < totalPages
                    ? `/blog/page/${currentPage + 1}`
                    : "#"
                }
                class={`flex items-center gap-2 text-sm font-medium transition-colors duration-200 ${
                  currentPage < totalPages
                    ? "text-[#7aa2f7] hover:text-[#bb9af7]"
                    : "cursor-not-allowed text-[#565f89]"
                }`}
              >
                <span>Next</span>
                <svg
                  class="h-4 w-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"
                  />
                </svg>
              </a>
            </div>
          </div>
        )
      }
    </main>

    <Footer />

    <style>
      .line-clamp-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }

      .line-clamp-3 {
        display: -webkit-box;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }
    </style>
  </body>
</html>
