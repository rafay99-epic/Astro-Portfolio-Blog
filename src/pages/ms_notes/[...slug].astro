---
import { featureFlags } from "@config/featureFlag/featureFlag.json";
import { type CollectionEntry, getCollection, render } from "astro:content";
import MSNoteLayout from "@layouts/MSNotes.astro";
export const prerender = true;

export async function getStaticPaths() {
  if (!featureFlags.showNotes) {
    return [];
  }

  const posts = await getCollection("ms_notes");

  const filteredPosts = import.meta.env.PROD
    ? posts.filter((post) => !post.data.lecture_draft)
    : posts;

  return filteredPosts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

type Props = CollectionEntry<"ms_notes">;

const post = Astro.props;

const { remarkPluginFrontmatter } = await render(post);

const { Content } = featureFlags.showNotes
  ? await post.render()
  : { Content: null };
---

{
  featureFlags.showNotes ? (
    Content ? (
      <MSNoteLayout
        {...post.data}
        readTime={remarkPluginFrontmatter.minutesRead}
      >
        <Content />
      </MSNoteLayout>
    ) : (
      <p>Failed to load note content.</p>
    )
  ) : (
    <p>Notes is currently disabled.</p>
  )
}
