---
import featureFlags from "@config/featureFlag/featureFlag.json";
import authorConfig from "@config/siteConfig/info.json";
import NavLink from "./NavLink.astro";

import {
  LuMenu as Menu,
  LuX as X,
  LuSearch as Search,
  LuTag as Tag,
  LuEllipsis as MoreHorizontal,
  LuHouse as Home,
  LuBookOpen as BookOpen,
  LuMail as Mail,
  LuUser as User,
  LuBriefcase as Briefcase,
  LuRocket as Rocket,
  LuNewspaper as Newspaper,
  LuTrendingUp as TrendingUp,
  LuStickyNote as StickyNote,
  LuGlobe as Globe,
  LuChevronDown as ChevronDown,
  LuExternalLink as ExternalLink,
} from "react-icons/lu";
---

<style is:global>
  /* Prevent header flash during view transitions */
  header {
    background-color: #1a1b26 !important;
    transition: none !important;
  }

  /* Ensure consistent background during transitions */
  ::view-transition-old(header),
  ::view-transition-new(header) {
    background-color: #1a1b26 !important;
    animation: none !important;
  }

  /* Prevent any blue flash */
  .backdrop-blur-xl {
    background-color: rgba(26, 27, 38, 0.9) !important;
  }

  /* Mobile menu specific styles for Astro */
  .mobile-menu-overlay {
    transition:
      opacity 0.3s ease-in-out,
      transform 0.3s ease-in-out;
    transform: translateX(100%); /* Start off-screen */
  }

  .mobile-menu-overlay.is-open {
    transform: translateX(0); /* Slide in */
  }

  .mobile-menu-backdrop {
    transition: opacity 0.3s ease-in-out;
    opacity: 0; /* Start hidden */
  }

  .mobile-menu-backdrop.is-open {
    opacity: 1; /* Fade in */
  }

  /* MoreDropdown styles */
  .more-dropdown {
    opacity: 0;
    transform: translateY(-10px) scale(0.95);
    transition: all 0.2s ease-out;
    pointer-events: none;
  }

  .more-dropdown.is-open {
    opacity: 1;
    transform: translateY(0) scale(1);
    pointer-events: auto;
  }

  .more-dropdown-button:hover {
    transform: scale(1.01);
  }

  .more-dropdown-button:active {
    transform: scale(0.99);
  }

  .more-dropdown-item {
    transition: all 0.2s ease-out;
  }

  .more-dropdown-item:hover {
    transform: translateX(3px);
  }

  .more-dropdown-external-link {
    opacity: 0;
    transition: opacity 0.3s ease-out;
  }

  .more-dropdown-item:hover .more-dropdown-external-link {
    opacity: 1;
  }
</style>

<header
  class="fixed left-0 right-0 top-0 z-50 bg-[#1a1b26]/90 backdrop-blur-xl"
  style={{ viewTransitionName: "header" }}
>
  <div class="container mx-auto px-4 sm:px-6">
    <div class="flex items-center justify-between py-4">
      <a href="/" class="group flex items-center">
        <div class="relative">
          <img
            src={authorConfig.avator}
            class="h-10 w-10 rounded-full border-2 border-[#7aa2f7]/30 transition-all duration-300 group-hover:border-[#7aa2f7] sm:h-12 sm:w-12"
          />
          <div
            class="absolute inset-0 rounded-full bg-gradient-to-r from-[#7aa2f7]/20 to-[#bb9af7]/20 opacity-0 blur-sm transition-opacity duration-300 group-hover:opacity-100"
          >
          </div>
        </div>
        <div class="ml-3 hidden sm:block">
          <h1
            class="bg-gradient-to-r from-[#c0caf5] to-[#a9b1d6] bg-clip-text text-lg font-bold text-transparent transition-transform duration-200 ease-out hover:scale-[1.01]"
          >
            {authorConfig.SiteName}
          </h1>
          <p class="text-xs text-[#a9b1d6]">Developer & Creator</p>
        </div>
      </a>

      <nav class="hidden items-center space-x-2 lg:flex">
        <NavLink href="/" icon={Home}> Home </NavLink>

        {
          featureFlags.featureFlags.showBlog && (
            <NavLink href="/blog" icon={BookOpen}>
              Articles
            </NavLink>
          )
        }

        {
          featureFlags.featureFlags.showNewsletter && (
            <NavLink href="/newsletter-subscribe" icon={Mail}>
              Newsletter
            </NavLink>
          )
        }

        {
          featureFlags.featureFlags.showAbout && (
            <NavLink href="/about" icon={User}>
              About
            </NavLink>
          )
        }

        {
          featureFlags.featureFlags.showExperience && (
            <NavLink href="/experience" icon={Briefcase}>
              Experience
            </NavLink>
          )
        }

        {
          featureFlags.featureFlags.showProjects && (
            <NavLink href="/project" icon={Rocket}>
              Projects
            </NavLink>
          )
        }
        {
          featureFlags.featureFlags.showTags && (
            <NavLink href="/tag" icon={Tag} aria-label="Tags" />
          )
        }
        {
          featureFlags.featureFlags.showSearch && (
            <NavLink href="/search" icon={Search} aria-label="Search" />
          )
        }

        <div class="relative" id="more-dropdown-container">
          <button
            aria-haspopup="true"
            id="more-dropdown-button"
            class="more-dropdown-button flex items-center rounded-lg px-3 py-2 text-[#c0caf5] transition-colors duration-300 hover:bg-[#24283b]/50 hover:text-[#7aa2f7]"
            aria-expanded="false"
          >
            <MoreHorizontal className="h-4 w-4" />
            <ChevronDown
              id="more-dropdown-chevron"
              className="ml-1 h-3 w-3 transition-transform duration-300"
            />
          </button>

          <div
            id="more-dropdown-menu"
            class="more-dropdown absolute right-0 z-50 mt-2 w-56 rounded-xl border border-[#565f89]/30 bg-[#24283b]/95 py-2 shadow-2xl backdrop-blur-xl"
          >
            <div class="space-y-1 px-2">
              {
                featureFlags.featureFlags.showNewsletter && (
                  <a
                    href="/newsletter"
                    class="more-dropdown-item group flex items-center gap-3 rounded-lg px-3 py-2 text-[#c0caf5] transition-all duration-300 hover:bg-[#1a1b26]/60 hover:text-[#7aa2f7]"
                  >
                    <Newspaper className="w-4 h-4 text-[#7aa2f7]" />
                    <span class="font-medium">Newsletter Archive</span>
                    <ExternalLink className="more-dropdown-external-link ml-auto w-3 h-3" />
                  </a>
                )
              }
              {
                featureFlags.featureFlags.showTrendingPosts && (
                  <a
                    href="/trending"
                    class="more-dropdown-item group flex items-center gap-3 rounded-lg px-3 py-2 text-[#c0caf5] transition-all duration-300 hover:bg-[#1a1b26]/60 hover:text-[#7aa2f7]"
                  >
                    <TrendingUp className="w-4 h-4 text-[#f7768e]" />
                    <span class="font-medium">Trending Articles</span>
                    <ExternalLink className="more-dropdown-external-link ml-auto w-3 h-3" />
                  </a>
                )
              }
              {
                featureFlags.featureFlags.showNotes && (
                  <a
                    href="/ms_notes"
                    class="more-dropdown-item group flex items-center gap-3 rounded-lg px-3 py-2 text-[#c0caf5] transition-all duration-300 hover:bg-[#1a1b26]/60 hover:text-[#7aa2f7]"
                  >
                    <StickyNote className="w-4 h-4 text-[#e0af68]" />
                    <span class="font-medium">MS Notes</span>
                    <ExternalLink className="more-dropdown-external-link ml-auto w-3 h-3" />
                  </a>
                )
              }
              {
                featureFlags.featureFlags.showWiki && (
                  <a
                    href="https://rafay99-docs.vercel.app/"
                    target="_blank"
                    rel="noopener noreferrer"
                    class="more-dropdown-item group flex items-center gap-3 rounded-lg px-3 py-2 text-[#c0caf5] transition-all duration-300 hover:bg-[#1a1b26]/60 hover:text-[#7aa2f7]"
                  >
                    <Globe className="w-4 h-4 text-[#9ece6a]" />
                    <span class="font-medium">Website Wiki</span>
                    <ExternalLink className="more-dropdown-external-link ml-auto w-3 h-3" />
                  </a>
                )
              }
            </div>
          </div>
        </div>
      </nav>

      <button
        id="mobile-menu-button"
        aria-label="Toggle menu"
        aria-expanded="false"
        class="rounded-lg p-2 text-[#c0caf5] transition-colors duration-300 hover:bg-[#24283b]/50 hover:text-[#7aa2f7] lg:hidden"
      >
        <Menu id="menu-icon" className="h-6 w-6" />
        <X id="close-icon" className="hidden h-6 w-6" />
      </button>
    </div>
  </div>
</header>

<div
  id="mobile-menu-backdrop"
  class="mobile-menu-backdrop fixed inset-0 z-[90] hidden bg-black/50 backdrop-blur-sm lg:hidden"
>
</div>

<nav
  id="mobile-menu"
  class="mobile-menu-overlay fixed right-0 top-0 z-[100] h-full w-80 max-w-[85vw] overflow-y-auto border-l border-[#565f89]/30 bg-[#1a1b26]/95 backdrop-blur-xl lg:hidden"
>
  <div
    class="flex items-center justify-between border-b border-[#565f89]/20 p-6"
  >
    <div class="flex items-center gap-3">
      <img
        src={authorConfig.avator}
        alt="Author Avatar"
        class="h-10 w-10 rounded-full border-2 border-[#7aa2f7]/30"
      />
      <div>
        <h2
          class="bg-gradient-to-r from-[#c0caf5] to-[#a9b1d6] bg-clip-text text-lg font-bold text-transparent"
        >
          {authorConfig.SiteName}
        </h2>
        <p class="text-xs text-[#a9b1d6]">Developer & Creator</p>
      </div>
    </div>
    <button
      id="close-mobile-menu"
      class="rounded-lg p-2 text-[#c0caf5] transition-colors duration-300 hover:bg-[#24283b]/50 hover:text-[#7aa2f7]"
    >
      <X className="h-5 w-5" />
    </button>
  </div>

  <div class="space-y-2 p-6">
    <NavLink href="/" icon={Home}> Home </NavLink>

    {
      featureFlags.featureFlags.showBlog && (
        <NavLink href="/blog" icon={BookOpen}>
          Articles
        </NavLink>
      )
    }

    {
      featureFlags.featureFlags.showNewsletter && (
        <NavLink href="/newsletter-subscribe" icon={Mail}>
          Newsletter
        </NavLink>
      )
    }

    {
      featureFlags.featureFlags.showAbout && (
        <NavLink href="/about" icon={User}>
          About
        </NavLink>
      )
    }

    {
      featureFlags.featureFlags.showExperience && (
        <NavLink href="/experience" icon={Briefcase}>
          Experience
        </NavLink>
      )
    }

    {
      featureFlags.featureFlags.showProjects && (
        <NavLink href="/project" icon={Rocket}>
          Projects
        </NavLink>
      )
    }

    {
      featureFlags.featureFlags.showTags && (
        <NavLink href="/tag" icon={Tag}>
          Tags
        </NavLink>
      )
    }

    {
      featureFlags.featureFlags.showSearch && (
        <NavLink href="/search" icon={Search}>
          Search
        </NavLink>
      )
    }

    {
      (featureFlags.featureFlags.showNewsletter ||
        featureFlags.featureFlags.showTrendingPosts ||
        featureFlags.featureFlags.showNotes ||
        featureFlags.featureFlags.showWiki) && (
        <div class="pt-4">
          <div class="border-t border-[#565f89]/20 pt-4">
            <h3 class="mb-3 px-4 text-sm font-semibold text-[#a9b1d6]">More</h3>
            <div class="space-y-2">
              {featureFlags.featureFlags.showNewsletter && (
                <NavLink href="/newsletter" icon={Newspaper}>
                  Newsletter Archive
                </NavLink>
              )}
              {featureFlags.featureFlags.showTrendingPosts && (
                <NavLink href="/trending" icon={TrendingUp}>
                  Trending Articles
                </NavLink>
              )}
              {featureFlags.featureFlags.showNotes && (
                <NavLink href="/ms_notes" icon={StickyNote}>
                  MS Notes
                </NavLink>
              )}
              {featureFlags.featureFlags.showWiki && (
                <NavLink
                  href="https://rafay99-docs.vercel.app/"
                  icon={Globe}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  Website Wiki
                </NavLink>
              )}
            </div>
          </div>
        </div>
      )
    }
  </div>
</nav>

<script is:inline>
  const mobileMenuButton = document.getElementById("mobile-menu-button");
  const mobileMenu = document.getElementById("mobile-menu");
  const mobileMenuBackdrop = document.getElementById("mobile-menu-backdrop");
  const closeMobileMenuButton = document.getElementById("close-mobile-menu");
  const menuIcon = document.getElementById("menu-icon");
  const closeIcon = document.getElementById("close-icon");

  let isMobileMenuOpen = false;

  const toggleMobileMenu = () => {
    isMobileMenuOpen = !isMobileMenuOpen;
    mobileMenuButton.setAttribute("aria-expanded", isMobileMenuOpen.toString());

    if (isMobileMenuOpen) {
      mobileMenu.classList.add("is-open");
      mobileMenuBackdrop.classList.add("is-open");
      mobileMenuBackdrop.classList.remove("hidden");
      menuIcon.classList.add("hidden");
      closeIcon.classList.remove("hidden");
      document.body.style.overflow = "hidden";
    } else {
      mobileMenu.classList.remove("is-open");
      mobileMenuBackdrop.classList.remove("is-open");

      setTimeout(() => {
        mobileMenuBackdrop.classList.add("hidden");
      }, 300);
      menuIcon.classList.remove("hidden");
      closeIcon.classList.add("hidden");
      document.body.style.overflow = "";
    }
  };

  const closeMobileMenu = () => {
    if (isMobileMenuOpen) {
      toggleMobileMenu();
    }
  };

  if (mobileMenuButton) {
    mobileMenuButton.addEventListener("click", toggleMobileMenu);
  }
  if (closeMobileMenuButton) {
    closeMobileMenuButton.addEventListener("click", closeMobileMenu);
  }
  if (mobileMenuBackdrop) {
    mobileMenuBackdrop.addEventListener("click", closeMobileMenu);
  }

  window.addEventListener("popstate", closeMobileMenu);

  window.addEventListener("resize", () => {
    if (window.innerWidth >= 1024 && isMobileMenuOpen) {
      closeMobileMenu();
    }
  });

  document.addEventListener("astro:after-swap", closeMobileMenu);

  const moreDropdownButton = document.getElementById("more-dropdown-button");
  const moreDropdownMenu = document.getElementById("more-dropdown-menu");
  const moreDropdownChevron = document.getElementById("more-dropdown-chevron");
  const moreDropdownContainer = document.getElementById(
    "more-dropdown-container",
  );

  let isMoreDropdownOpen = false;

  const toggleMoreDropdown = () => {
    isMoreDropdownOpen = !isMoreDropdownOpen;
    moreDropdownButton.setAttribute(
      "aria-expanded",
      isMoreDropdownOpen.toString(),
    );

    if (isMoreDropdownOpen) {
      moreDropdownMenu.classList.add("is-open");
      moreDropdownChevron.style.transform = "rotate(180deg)";
    } else {
      moreDropdownMenu.classList.remove("is-open");
      moreDropdownChevron.style.transform = "rotate(0deg)";
    }
  };

  const closeMoreDropdown = () => {
    if (isMoreDropdownOpen) {
      isMoreDropdownOpen = false;
      moreDropdownButton.setAttribute("aria-expanded", "false");
      moreDropdownMenu.classList.remove("is-open");
      moreDropdownChevron.style.transform = "rotate(0deg)";
    }
  };

  if (moreDropdownButton) {
    moreDropdownButton.addEventListener("click", (e) => {
      e.stopPropagation();
      toggleMoreDropdown();
    });
  }

  document.addEventListener("click", (e) => {
    if (moreDropdownContainer && !moreDropdownContainer.contains(e.target)) {
      closeMoreDropdown();
    }
  });

  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape" && isMoreDropdownOpen) {
      closeMoreDropdown();
    }
  });

  document.addEventListener("astro:after-swap", closeMoreDropdown);
</script>
