---
import popularBlogsData from "@config/popularBlogs/traffic.json";
import { getCollection } from "astro:content";
import type { CombinedPost } from "types/popular_post";
import FeaturedContent from "@react/blog/metadata/FeaturedContent/featureContent";

const allPosts = await getCollection("blog");
const publishedPosts = allPosts.filter((post) => !post.data.draft);
const popularBlogs = popularBlogsData.popularBlogs;
const popularPages = new Map<string, { Page: string; Visitors: number }>(
  popularBlogs.map((entry) => [entry.Page.replace("/blog/", ""), entry])
);

const combinedPopularPosts: CombinedPost[] = publishedPosts
  .map((post) => {
    const localData = popularPages.get(post.slug);

    const visitors = Math.max(localData?.Visitors ?? 0);

    return {
      post,
      visitors,
    };
  })
  .filter((item) => item.visitors > 0)
  .sort((a, b) => b.visitors - a.visitors)
  .slice(0, 4);
---

<FeaturedContent combinedPopularPosts={combinedPopularPosts} client:visible />
